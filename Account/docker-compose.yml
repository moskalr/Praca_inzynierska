version: '3.7'

services:
  account-microservice:
    hostname: account-microservice
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./:/home/app/src
    ports:
      - "8090:8090"
    networks:
      - backend-network

  postgres:
    image: postgres:15
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file: .env
    networks:
      - backend-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.4
    hostname: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    env_file: .env
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
      - ./pgpass:/pgpass
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - backend-network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    hostname: keycloak
    volumes:
      - ./imports:/opt/keycloak/data/import
      - ./themes:/opt/keycloak/themes
    environment:
      KC_DB: ${KEYCLOAK_DB}
      KC_DB_URL_HOST: ${KEYCLOAK_DB_URL_HOST}
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_URL_DATABASE}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME}
      KC_DB_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    env_file: .env
    ports:
      - "8082:8080"
    depends_on:
      - postgres
    command:
      - -v start-dev --import-realm
    networks:
      - backend-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend-network
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - backend-network

volumes:
  postgres_data:
    driver: local
  pgadmin:
    driver: local
  pgpass:
    driver: local

networks:
  backend-network:
    driver: bridge


